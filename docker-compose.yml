# docker-compose.yml
version: '3.8'

services:
  pg_monitor:
    build: .
    container_name: pg_monitor
    restart: unless-stopped
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/var/log/pg_monitor
      - /var/lib/postgresql/data/log:/var/lib/postgresql/data/log:ro
    ports:
      - "9394:9394"
    networks:
      - monitoring
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9394/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pg_monitor_scheduler:
    build: .
    container_name: pg_monitor_scheduler
    restart: unless-stopped
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/var/log/pg_monitor
      - /var/lib/postgresql/data/log:/var/lib/postgresql/data/log:ro
      - ./crontab:/etc/crontabs/pgmonitor:ro
    command: ["crond", "-f", "-l", "2"]
    networks:
      - monitoring
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    container_name: postgres_monitored
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-testdb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    ports:
      - "5432:5432"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./examples/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    networks:
      - monitoring

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
